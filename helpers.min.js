Function.prototype.not=function(){var t=this;return function(){return !t.apply(this,arguments)}}
Function.prototype.curry=function(){var t=this;return function i(c){return function(){var a=c.concat(c.slice.call(arguments));return(a.length<t.length)?i(a):t.apply(this,a)}}([].slice.call(arguments))}
Function.prototype.trampoline=function(){var t=this;return function(){var r=t.apply(this, arguments);while(typeof r==='function')r=r();return r}}

Array.range=function(s,e){var a=[];while(s<e)a.push(s++);return a}
Array.prototype.combos=function(){var t=this,r=Array.range,p=Math.pow;return r(1,p(2,t.length)).map(function(n){return r(0,t.length).reduce(function(c,i){if(n&p(2,i))c.push(t[i]);return c},[])})}
Array.prototype.compact=function(){return this.filter(function(i){return i})}
Array.prototype.contains=function(i){return this.indexOf(i)!=-1}
Array.prototype.sum=function(){return this.reduce(function(s,n){return s+n})}
Array.prototype.find=function(f){for(var i=0;i<this.length;i++)if(f(this[i]))return this[i]}
Array.prototype.any=function(f){for(var i=0;i<this.length;)if(f(this[i++]))return !0;return !1}
Array.prototype.all=function(f){for(var i=0;i<this.length;)if(!f(this[i++]))return !1;return !0}
Array.prototype.max=function(){return this.reduce(function(m,n){if(n>m)return n;return m})}
Array.prototype.min=function(){return this.reduce(function(m,n){if(n<m)return n;return m})}
Array.prototype.pluck=function(n){return this.select(function(i){return i[n]})}
Array.prototype.first=function(){return this[0]}
Array.prototype.initial=function(n){n=n||this.length-1;return this.slice(0,n)}
Array.prototype.last=function(){return this[this.length-1]}
Array.prototype.rest=function(n){n=n?this.length-n:1;return this.slice(n)}
Array.prototype.clone=function(){return this.slice(0)}
Array.prototype.unique=function(){var t=this;return t.reduce(function(u,i){if(!t.contains(i))u.push(i);return u},[])};
Array.prototype.without=function(v){return this.filter(v.contains.not().bind(v))}
Array.prototype.intersect=function(v){return this.filter(v.contains.bind(v))}
Array.prototype.countBy=function(f){return this.reduce(function(m,i){var k=f(i);m[k]=~~m[k]+1;return m},{})}

Object.prototype.keys=function(){var r=[];for(var k in this)if(this.hasOwnProperty(k))r.push(k);return r}
Object.prototype.vals=function(){var t=this;return t.keys().map(function(k){return t[k]})}
Object.prototype.kvps=function(){var t=this;return t.keys().map(function(k){return {key:k,value:t[k]}})}

String.prototype.toArray=function(){return this.split('')}
String.prototype.reverse=function(){return this.split('').reverse().join('')}
String.prototype.isPalindrome=function(){return this==this.reverse()}
String.format=function(t){var a=arguments;for(var i=0;i<a.length-1;)t=t.replace(new RegExp("\\{"+i+"}","g"),a[++i]);return t}

Number.prototype.isPrime=function(){for(var n=2;n<this;)if(!(this%n++))return !1;return !0}

function lambda(f){var a=f.indexOf('=>');return Function(f.substr(0,a).replace(/[(,)]/g,' ').split(' ').filter(String),"return "+f.substr(a+2))}
function numericSort(a,b){return a-b}
