// http://jsfiddle.net/A686u/

// PROBLEM //

/*
Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms
will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do
not exceed four million, find the sum of the even-valued terms.
*/

// HELPERS //

Array.prototype.sum=function(){return this.reduce(function(s,n){return s+n})}

function lambda(f){var a=f.indexOf('=>');return Function(f.substr(0,a).replace(/[(,)]/g,' ').split(' ').filter(String),"return "+f.substr(a+2))}

// ANSWER //

function fibonacci(first, second, ceiling) {
    // Defaults to classic fibonacci
    first = first || 1;
    second = second || 1;
    ceiling = ceiling || 4000000;

    var numbers = [];

    // We only handle increasing sequences
    if (ceiling < 0)
        return numbers;

    // We only handle increasing sequences
    if (first + second < 1)
        return numbers;

    if (second > first) {
        var temp = first;
        first = second;
        second = temp;
    }

     if (first > ceiling)
        return numbers;

    numbers.push(first);

    if (second > ceiling)
        return numbers;

    numbers.push(second);

    var number = first + second;
    while (number < ceiling) {
        numbers.push(number);

        first = second;
        second = number;
        number = first + second;
    }

    return numbers;
}

var result = fibonacci()
  .filter(lambda("n => !(n % 2)"))
  .sum();

// 4613732
